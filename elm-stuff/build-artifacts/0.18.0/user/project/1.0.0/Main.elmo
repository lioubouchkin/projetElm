var _user$project$Main$decodeGameState = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'state',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$decodeStopGame = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'game',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$decodePickCard = A2(_elm_lang$core$Json_Decode$field, 'cards', _elm_lang$core$Json_Decode$string);
var _user$project$Main$decodeJoinGame = A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string);
var _user$project$Main$userBordsStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'padding', _1: '0 50px'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$renderCards = function (lst) {
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			function (l) {
				return A2(
					_elm_lang$html$Html$li,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(l),
						_1: {ctor: '[]'}
					});
			},
			lst));
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$player = {
	name: '',
	status: 0,
	points: 0,
	cards: {ctor: '[]'}
};
var _user$project$Main$model = {pl: _user$project$Main$player};
var _user$project$Main$Player = F4(
	function (a, b, c, d) {
		return {name: a, status: b, points: c, cards: d};
	});
var _user$project$Main$Model = function (a) {
	return {pl: a};
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: _user$project$Main$Model(_user$project$Main$player),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$GameStateResponse = function (a) {
	return {ctor: 'GameStateResponse', _0: a};
};
var _user$project$Main$gameState = function () {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:8080/gameState/', _user$project$Main$model.pl.name);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Main$decodePickCard);
	return A2(_elm_lang$http$Http$send, _user$project$Main$GameStateResponse, request);
}();
var _user$project$Main$GameState = {ctor: 'GameState'};
var _user$project$Main$PickCardResponse = function (a) {
	return {ctor: 'PickCardResponse', _0: a};
};
var _user$project$Main$pickCard = function (player) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:8080/pickCard/', _user$project$Main$model.pl.name);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Main$decodePickCard);
	return A2(_elm_lang$http$Http$send, _user$project$Main$PickCardResponse, request);
};
var _user$project$Main$PickCard = {ctor: 'PickCard'};
var _user$project$Main$StopGameResponse = function (a) {
	return {ctor: 'StopGameResponse', _0: a};
};
var _user$project$Main$stopGame = function () {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:8080/stopGame/', _user$project$Main$model.pl.name);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeStopGame);
	return A2(_elm_lang$http$Http$send, _user$project$Main$StopGameResponse, request);
}();
var _user$project$Main$StopGame = {ctor: 'StopGame'};
var _user$project$Main$JoinGameResponse = function (a) {
	return {ctor: 'JoinGameResponse', _0: a};
};
var _user$project$Main$joinGame = function (player) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'http://localhost:8080/newgame/', player);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeJoinGame);
	return A2(_elm_lang$http$Http$send, _user$project$Main$JoinGameResponse, request);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Display':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'PickCard':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$pickCard(model.pl.name)
				};
			case 'PickCardResponse':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Main$Model(
							A4(
								_user$project$Main$Player,
								model.pl.name,
								1,
								0,
								{ctor: '[]'})),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'GameState':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$gameState};
			case 'GameStateResponse':
				if (_p0._0.ctor === 'Ok') {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'JoinGame':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$joinGame(model.pl.name)
				};
			case 'JoinGameResponse':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Main$Model(
							A4(
								_user$project$Main$Player,
								_p0._0._0,
								1,
								0,
								{ctor: '[]'})),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _user$project$Main$Model(
							A4(
								_user$project$Main$Player,
								'Error',
								1,
								0,
								{ctor: '[]'})),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'StopGame':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Main$stopGame};
			case 'StopGameResponse':
				if (_p0._0.ctor === 'Ok') {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _user$project$Main$Model(
						A4(_user$project$Main$Player, _p0._0, model.pl.status, model.pl.points, model.pl.cards)),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$JoinGame = {ctor: 'JoinGame'};
var _user$project$Main$Name = function (a) {
	return {ctor: 'Name', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$Main$userBordsStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h2,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Native_Utils.eq(model.pl.status, 1) ? model.pl.name : ''),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.eq(model.pl.status, 1) ? A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(''),
								_1: {ctor: '[]'}
							}) : A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('text'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('Votre nom'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Name),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Cards:'),
									_1: {
										ctor: '::',
										_0: _elm_lang$core$Native_Utils.eq(model.pl.status, 1) ? _user$project$Main$renderCards(model.pl.cards) : _elm_lang$html$Html$text(''),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Points: '),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_elm_lang$core$Native_Utils.eq(model.pl.status, 1) ? _elm_lang$core$Basics$toString(model.pl.points) : ''),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_elm_lang$core$Native_Utils.eq(model.pl.status, 1) ? _user$project$Main$PickCard : _user$project$Main$JoinGame),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_elm_lang$core$Native_Utils.eq(model.pl.status, 1) ? 'Pick Card' : 'Join Game'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$Display = {ctor: 'Display'};
